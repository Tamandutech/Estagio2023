// Grupo 3

//
// Direita  A   3
// Esquerda C   1
//

#define perto               40          // cm
#define time_wait           20          // ms
#define s2ms(x)             1000*x      // ms -> s
#define claro               60          // %
#define timeAtaqueF         10          // s
#define timeAtaqueT         6           // s
#define timeContraAtaqueF   12          // s
#define timeContraAtaqueT   12          // s

#define motorDireita        OUT_A
#define motorEsquerda       OUT_C
#define sensorSomF          SensorUS(IN_4)
#define sensorSomT          SensorUS(IN_3)
#define sensorLuzF          SensorUS(IN_1)
#define sensorLuzT          SensorUS(IN_2)

void Init();
void RunF(int pot);
void RunT(int pot);
void GirarEixoDireita(int pot);
void GirarEixoEsquerda(int pot);
void ResetVar();
void AtackVar();
void UpdateTempo();

int tempo_ataque = 0;
bool contra_ataque = false;

task main() {
    Init();
    while(true) {
        /* ATRAS */
        // Ataque Frente
        if (sensorSomF < perto && tempo_ataque < s2ms(timeAtaqueF) && !contra_ataque) {
            UpdateTempo();
            RunF(100);
        }
        // Contra Ataque Giro Frente
        else if(sensorSomF < perto && tempo_ataque >= s2ms(timeAtaqueF) && !contra_ataque) {
            AtackVar();
            for (int i = 0; i < 2000; i += time_wait) {
                OnRev(motorDireita,25);
                OnFwd(motorEsquerda,100);
                Wait(time_wait);
                if(sensorLuzT > claro) {
                    for (int i = 0; i < 600; i += time_wait) {
                        GirarEixoEsquerda(90);
                        Wait(time_wait);
                        if(sensorLuzF > claro) {
                            RunT(100);
                            Wait(800);
                            GirarEixoEsquerda(90);
                            Wait(800);
                            break;
                        }
                    }
                    RunT(100);
                    Wait(800);
                    break;
                }
            }
        }
        // Contra Ataque Frente
        else if(sensorSomF < perto && tempo_ataque < s2ms(timeContraAtaqueF) && contra_ataque) {
            UpdateTempo();
            RunF(100);
        }

        /* ATRAS */
        // Ataque Atras
        else if (sensorSomT < perto && tempo_ataque < s2ms(timeAtaqueT) && !contra_ataque) {
            UpdateTempo();
            RunT(100);
        }
        // Contra Ataque Giro Atras
        else if(sensorSomT < perto && tempo_ataque >= s2ms(timeAtaqueT) && !contra_ataque) {
            AtackVar();
            for (int i = 0; i < 2000; i += time_wait) {
                OnFwd(motorDireita,25);
                OnRev(motorEsquerda,100);
                Wait(time_wait);
                if(sensorLuzF > claro) {
                    for (int i = 0; i < 600; i += time_wait) {
                        GirarEixoDireita(90);
                        Wait(time_wait);
                        if(sensorLuzT > claro) {
                            RunF(100);
                            Wait(800);  
                            GirarEixoDireita(90);
                            Wait(800);
                            break;
                        }
                    }
                    RunF(100);
                    Wait(800);
                    break;
                }
            }
        }
        // Contra Ataque Atras
        else if(sensorSomT < perto && tempo_ataque < s2ms(timeContraAtaqueT) && contra_ataque) {
            UpdateTempo();
            RunT(100);
        }

        /* NADA */
        // Achou NADA!!!
        else {
            GirarEixoDireita(50);
            Wait(time_wait);
            ResetVar();
        }
    }
}

void Init() {
    SetSensorLowspeed(IN_1);
    SetSensorLowspeed(IN_2);
    SetSensorLowspeed(IN_3);
    SetSensorLowspeed(IN_4);
    Wait(5000);
}

void RunF(int pot) {
    OnRev(motorDireita,pot);
    OnRev(motorEsquerda,pot);
    Wait(time_wait);
}

void RunT(int pot) {
    OnFwd(motorDireita,pot);
    OnFwd(motorEsquerda,pot);
    Wait(time_wait);
}

void GirarEixoDireita(int pot){
    OnFwd(motorDireita,pot);
    OnRev(motorEsquerda,pot);
}

void GirarEixoEsquerda(int pot){
    OnRev(motorDireita,pot);
    OnFwd(motorEsquerda,pot);
}

void ResetVar() {
    tempo_ataque = 0;
    contra_ataque = false;
}

void AtackVar(){
    tempo_ataque = 0;
    contra_ataque = true;
}

void UpdateTempo(){
    tempo_ataque += time_wait;
}
